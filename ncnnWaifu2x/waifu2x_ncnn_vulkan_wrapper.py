# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_waifu2x_ncnn_vulkan_wrapper')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_waifu2x_ncnn_vulkan_wrapper')
    _waifu2x_ncnn_vulkan_wrapper = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_waifu2x_ncnn_vulkan_wrapper', [dirname(__file__)])
        except ImportError:
            import _waifu2x_ncnn_vulkan_wrapper
            return _waifu2x_ncnn_vulkan_wrapper
        try:
            _mod = imp.load_module('_waifu2x_ncnn_vulkan_wrapper', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _waifu2x_ncnn_vulkan_wrapper = swig_import_helper()
    del swig_import_helper
else:
    import _waifu2x_ncnn_vulkan_wrapper
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    raise ImportError
    # import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0


def new_str_p():
    return _waifu2x_ncnn_vulkan_wrapper.new_str_p()
new_str_p = _waifu2x_ncnn_vulkan_wrapper.new_str_p

def copy_str_p(value):
    return _waifu2x_ncnn_vulkan_wrapper.copy_str_p(value)
copy_str_p = _waifu2x_ncnn_vulkan_wrapper.copy_str_p

def delete_str_p(obj):
    return _waifu2x_ncnn_vulkan_wrapper.delete_str_p(obj)
delete_str_p = _waifu2x_ncnn_vulkan_wrapper.delete_str_p

def str_p_assign(obj, value):
    return _waifu2x_ncnn_vulkan_wrapper.str_p_assign(obj, value)
str_p_assign = _waifu2x_ncnn_vulkan_wrapper.str_p_assign

def str_p_value(obj):
    return _waifu2x_ncnn_vulkan_wrapper.str_p_value(obj)
str_p_value = _waifu2x_ncnn_vulkan_wrapper.str_p_value

def new_wstr_p():
    return _waifu2x_ncnn_vulkan_wrapper.new_wstr_p()
new_wstr_p = _waifu2x_ncnn_vulkan_wrapper.new_wstr_p

def copy_wstr_p(value):
    return _waifu2x_ncnn_vulkan_wrapper.copy_wstr_p(value)
copy_wstr_p = _waifu2x_ncnn_vulkan_wrapper.copy_wstr_p

def delete_wstr_p(obj):
    return _waifu2x_ncnn_vulkan_wrapper.delete_wstr_p(obj)
delete_wstr_p = _waifu2x_ncnn_vulkan_wrapper.delete_wstr_p

def wstr_p_assign(obj, value):
    return _waifu2x_ncnn_vulkan_wrapper.wstr_p_assign(obj, value)
wstr_p_assign = _waifu2x_ncnn_vulkan_wrapper.wstr_p_assign

def wstr_p_value(obj):
    return _waifu2x_ncnn_vulkan_wrapper.wstr_p_value(obj)
wstr_p_value = _waifu2x_ncnn_vulkan_wrapper.wstr_p_value
class Waifu2x(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Waifu2x, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Waifu2x, name)
    __repr__ = _swig_repr

    def __init__(self, gpuid, tta_mode=False, num_threads=1):
        this = _waifu2x_ncnn_vulkan_wrapper.new_Waifu2x(gpuid, tta_mode, num_threads)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _waifu2x_ncnn_vulkan_wrapper.delete_Waifu2x
    __del__ = lambda self: None
    __swig_setmethods__["noise"] = _waifu2x_ncnn_vulkan_wrapper.Waifu2x_noise_set
    __swig_getmethods__["noise"] = _waifu2x_ncnn_vulkan_wrapper.Waifu2x_noise_get
    if _newclass:
        noise = _swig_property(_waifu2x_ncnn_vulkan_wrapper.Waifu2x_noise_get, _waifu2x_ncnn_vulkan_wrapper.Waifu2x_noise_set)
    __swig_setmethods__["scale"] = _waifu2x_ncnn_vulkan_wrapper.Waifu2x_scale_set
    __swig_getmethods__["scale"] = _waifu2x_ncnn_vulkan_wrapper.Waifu2x_scale_get
    if _newclass:
        scale = _swig_property(_waifu2x_ncnn_vulkan_wrapper.Waifu2x_scale_get, _waifu2x_ncnn_vulkan_wrapper.Waifu2x_scale_set)
    __swig_setmethods__["tilesize"] = _waifu2x_ncnn_vulkan_wrapper.Waifu2x_tilesize_set
    __swig_getmethods__["tilesize"] = _waifu2x_ncnn_vulkan_wrapper.Waifu2x_tilesize_get
    if _newclass:
        tilesize = _swig_property(_waifu2x_ncnn_vulkan_wrapper.Waifu2x_tilesize_get, _waifu2x_ncnn_vulkan_wrapper.Waifu2x_tilesize_set)
    __swig_setmethods__["prepadding"] = _waifu2x_ncnn_vulkan_wrapper.Waifu2x_prepadding_set
    __swig_getmethods__["prepadding"] = _waifu2x_ncnn_vulkan_wrapper.Waifu2x_prepadding_get
    if _newclass:
        prepadding = _swig_property(_waifu2x_ncnn_vulkan_wrapper.Waifu2x_prepadding_get, _waifu2x_ncnn_vulkan_wrapper.Waifu2x_prepadding_set)
Waifu2x_swigregister = _waifu2x_ncnn_vulkan_wrapper.Waifu2x_swigregister
Waifu2x_swigregister(Waifu2x)

class Image(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Image, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Image, name)
    __repr__ = _swig_repr
    __swig_setmethods__["data"] = _waifu2x_ncnn_vulkan_wrapper.Image_data_set
    __swig_getmethods__["data"] = _waifu2x_ncnn_vulkan_wrapper.Image_data_get
    if _newclass:
        data = _swig_property(_waifu2x_ncnn_vulkan_wrapper.Image_data_get, _waifu2x_ncnn_vulkan_wrapper.Image_data_set)
    __swig_setmethods__["w"] = _waifu2x_ncnn_vulkan_wrapper.Image_w_set
    __swig_getmethods__["w"] = _waifu2x_ncnn_vulkan_wrapper.Image_w_get
    if _newclass:
        w = _swig_property(_waifu2x_ncnn_vulkan_wrapper.Image_w_get, _waifu2x_ncnn_vulkan_wrapper.Image_w_set)
    __swig_setmethods__["h"] = _waifu2x_ncnn_vulkan_wrapper.Image_h_set
    __swig_getmethods__["h"] = _waifu2x_ncnn_vulkan_wrapper.Image_h_get
    if _newclass:
        h = _swig_property(_waifu2x_ncnn_vulkan_wrapper.Image_h_get, _waifu2x_ncnn_vulkan_wrapper.Image_h_set)
    __swig_setmethods__["elempack"] = _waifu2x_ncnn_vulkan_wrapper.Image_elempack_set
    __swig_getmethods__["elempack"] = _waifu2x_ncnn_vulkan_wrapper.Image_elempack_get
    if _newclass:
        elempack = _swig_property(_waifu2x_ncnn_vulkan_wrapper.Image_elempack_get, _waifu2x_ncnn_vulkan_wrapper.Image_elempack_set)

    def __init__(self, d, w, h, channels):
        this = _waifu2x_ncnn_vulkan_wrapper.new_Image(d, w, h, channels)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _waifu2x_ncnn_vulkan_wrapper.delete_Image
    __del__ = lambda self: None
Image_swigregister = _waifu2x_ncnn_vulkan_wrapper.Image_swigregister
Image_swigregister(Image)

class StringType(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StringType, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StringType, name)
    __repr__ = _swig_repr
    __swig_setmethods__["str"] = _waifu2x_ncnn_vulkan_wrapper.StringType_str_set
    __swig_getmethods__["str"] = _waifu2x_ncnn_vulkan_wrapper.StringType_str_get
    if _newclass:
        str = _swig_property(_waifu2x_ncnn_vulkan_wrapper.StringType_str_get, _waifu2x_ncnn_vulkan_wrapper.StringType_str_set)
    __swig_setmethods__["wstr"] = _waifu2x_ncnn_vulkan_wrapper.StringType_wstr_set
    __swig_getmethods__["wstr"] = _waifu2x_ncnn_vulkan_wrapper.StringType_wstr_get
    if _newclass:
        wstr = _swig_property(_waifu2x_ncnn_vulkan_wrapper.StringType_wstr_get, _waifu2x_ncnn_vulkan_wrapper.StringType_wstr_set)

    def __init__(self):
        this = _waifu2x_ncnn_vulkan_wrapper.new_StringType()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _waifu2x_ncnn_vulkan_wrapper.delete_StringType
    __del__ = lambda self: None
StringType_swigregister = _waifu2x_ncnn_vulkan_wrapper.StringType_swigregister
StringType_swigregister(StringType)

class Waifu2xWrapped(Waifu2x):
    __swig_setmethods__ = {}
    for _s in [Waifu2x]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Waifu2xWrapped, name, value)
    __swig_getmethods__ = {}
    for _s in [Waifu2x]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, Waifu2xWrapped, name)
    __repr__ = _swig_repr

    def __init__(self, gpuid, tta_mode=False, num_threads=1):
        this = _waifu2x_ncnn_vulkan_wrapper.new_Waifu2xWrapped(gpuid, tta_mode, num_threads)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def load(self, parampath, modelpath):
        return _waifu2x_ncnn_vulkan_wrapper.Waifu2xWrapped_load(self, parampath, modelpath)

    def process(self, inimage, outimage):
        return _waifu2x_ncnn_vulkan_wrapper.Waifu2xWrapped_process(self, inimage, outimage)

    def process_cpu(self, inimage, outimage):
        return _waifu2x_ncnn_vulkan_wrapper.Waifu2xWrapped_process_cpu(self, inimage, outimage)

    def get_heap_budget(self):
        return _waifu2x_ncnn_vulkan_wrapper.Waifu2xWrapped_get_heap_budget(self)
    __swig_destroy__ = _waifu2x_ncnn_vulkan_wrapper.delete_Waifu2xWrapped
    __del__ = lambda self: None
Waifu2xWrapped_swigregister = _waifu2x_ncnn_vulkan_wrapper.Waifu2xWrapped_swigregister
Waifu2xWrapped_swigregister(Waifu2xWrapped)


def get_gpu_count():
    return _waifu2x_ncnn_vulkan_wrapper.get_gpu_count()
get_gpu_count = _waifu2x_ncnn_vulkan_wrapper.get_gpu_count

def destroy_gpu_instance():
    return _waifu2x_ncnn_vulkan_wrapper.destroy_gpu_instance()
destroy_gpu_instance = _waifu2x_ncnn_vulkan_wrapper.destroy_gpu_instance
# This file is compatible with both classic and new-style classes.


